### Parameters file for PyLord - generation and evaluation of top null models
# based on lower-order statistics###

[general]

# supported engines: Comet, Tide, MSFragger, MSGFPlus. default: Comet
engine = Tide

# supported scores: 'tev' (as the lower-order models are designed to work just on that score,
# but it's possible it will be extended to other scores in the future
filter_score = tev

# by default: the core name of the input file, e.g., example.mzML -> example.txt, example.png
output_path = ./output_results/


[general.plotting]

# specify if you want to plot the results or not. Default values: True, False
plot_results = True

# file format for the plotted figures (any matplotlib-compatible format is fine)
plot_format = pdf

# plot dpi if applicable
plot_dpi = 300


[estimation]

# Allowed values: 'Fixed' or 'MainDip'
cutoff_finder = Fixed

# Estimators used to determine parameters of the lower-order distributions
estimators = AsymptoticGumbelMLE, MethodOfMoments

# Strategies used to optimize the mu and beta parameters of the top null model
optimization_modes = LinearRegression, MeanBeta 

# Format of the file into which the parameters of top null models for all available charges
# will be exported, can be: 'PeptideProphet', 'MuBeta'
exporter = MuBeta


[validation.general]

# Specify which model(s) you want to include in the analysis
# If you want to select multiple models, separate their names by '_',
# e.g., Decoy_LowerOrder_CDD
# available: 'Decoy', 'LowerOrder', 'CDD'
null_model = Decoy_LowerOrder_CDD

# Use the original p-values from the search engine and apply Sidak correction
# possible values: True, False
sidak = False

# name of model whose p-value will be used for FDR estimation
p_value_type = LowerOrder

# if pi0 adjustment needed, specify the name of the method used,
# if not needed, leave this parameter empty or comment out
# for pi0 calculation; possible values: True, Coute
pi_zero_method = True

# FDR estimation method
# possible values: BejaminiHochberg, PEP (Posterior Error Probability)
fdr_method = BenjaminiHochberg

[validation.bootstrap]

# number of bootstrap samples to use
num_rep = 200

# first number: starting FDR threshold, second: ending FDR threshold, 
# third: number of steps in between the starting and ending FDR thresholds,
# separate the values with '_'
fdr_thresholds_array = 0.001_0.1_100

# alpha for the bootstrapped confidence interval
confidence_interval_alpha = 0.32

